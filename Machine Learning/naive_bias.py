# -*- coding: utf-8 -*-
"""naive bias

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1U45MnloiW6h7TsVBtrpewW9pawp1T7D5
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn import datasets
from sklearn.naive_bayes  import GaussianNB
from sklearn.metrics import confusion_matrix
from sklearn import metrics

wine = datasets.load_wine()

print("features:",wine.feature_names)
print("labels:", wine.target_names)

x = pd.DataFrame(wine["data"])

x.head()

wine.data.shape

y = wine.target

x_train , x_test , y_train , y_test = train_test_split(wine.data , wine.target ,test_size = 0.3 )
model = GaussianNB()

model.fit(x_train,y_train)

x_predict = model.predict(x_train)
y_predict = model.predict(x_test)

print(y_predict)

accuracy = metrics.accuracy_score(x_predict , y_train)
y_accuracy = metrics.accuracy_score(y_predict , y_test)
print(accuracy)
print(y_accuracy)

cm = np.array(confusion_matrix(x_predict , y_train))
cm

cm2 = np.array(confusion_matrix(y_predict , y_test))
cm2

